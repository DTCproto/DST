# This is a basic workflow to help you get started with Actions

name: BUILD_BY_MANUAL

on:
  workflow_dispatch:
    inputs:
      dst_go_commit_id:
        description: "指定dst-admin-go使用commit id版本"
        required: true
        default: "main"
        type: string
      dst_web_commit_id:
        description: "指定dst-manage-web使用commit id版本"
        required: true
        default: "main"
        type: string
      release_archives:
        description: "enable release archives"
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    outputs:
      core_short_commit_id: ${{ steps.set_global_params.outputs.core_short_commit_id }}
      web_short_commit_id: ${{ steps.set_global_params.outputs.web_short_commit_id }}
      core_current_branch: ${{ steps.set_global_params.outputs.core_current_branch }}
      web_current_branch: ${{ steps.set_global_params.outputs.web_current_branch }}
    strategy:
      matrix:
        os: [linux]
        arch: [amd64,arm64]
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.20"

      - uses: actions/setup-node@v5
        with:
          node-version: "20"

      - name: git clone dst-admin-go
        run: |
          mkdir -p ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build
          git clone https://github.com/carrot-hu23/dst-admin-go.git
          cd ${{ github.workspace }}/build/dst-admin-go
          git checkout --force --quiet ${{ inputs.dst_go_commit_id }}

      - name: git clone dst-manage-web
        run: |
          mkdir -p ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build
          git clone https://github.com/carrot-hu23/dst-manage-web2.git
          cd ${{ github.workspace }}/build/dst-manage-web2
          git checkout --force --quiet ${{ inputs.dst_web_commit_id }}

      - name: set global params
        id: set_global_params
        run: |
          cd ${{ github.workspace }}/build/dst-admin-go
          echo "core_short_commit_id=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          echo "core_current_branch=$(git branch --show-current)" >> "$GITHUB_OUTPUT"
          cd ${{ github.workspace }}/build/dst-manage-web2
          echo "web_short_commit_id=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          echo "web_current_branch=$(git branch --show-current)" >> "$GITHUB_OUTPUT"

      - name: remove ads
        run: |
          sed -i 's/139.159.184.218/127.0.0.1/g' ${{ github.workspace }}/build/dst-manage-web2/vite.config.ts
          cp -rf ${{ github.workspace }}/ext/Ad/* ${{ github.workspace }}/build/dst-manage-web2/src/pages/Ad/

      - name: build dst-admin-go
        run: |
          cd ${{ github.workspace }}/build/dst-admin-go
          go mod tidy
          go get -u
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -o dst-admin-go -ldflags "-s -w" -v

      - name: fix build web no-check
        run: |
          sed -i 's|"build": "tsc -b && vite build"|"build": "vite build"|' ${{ github.workspace }}/build/dst-manage-web2/package.json

      - name: build dst-manage-web
        env:
          CI: false
        run: |
          cd ${{ github.workspace }}/build/dst-manage-web2
          npm install
          npm run build

      - name: copy build result files
        run: |
          mkdir -p ${{ github.workspace }}/build/result/app
          cp -rf ${{ github.workspace }}/build/dst-admin-go/dst-admin-go ${{ github.workspace }}/build/result/app/dst-admin-go
          cp -rf ${{ github.workspace }}/build/dst-admin-go/config.yml ${{ github.workspace }}/build/result/app/config.yml
          cp -rf ${{ github.workspace }}/build/dst-admin-go/static ${{ github.workspace }}/build/result/app/static
          cp -rf ${{ github.workspace }}/build/dst-manage-web2/dist ${{ github.workspace }}/build/result/app/dist

      - name: show build result files
        run: |
          ls -R ${{ github.workspace }}/build/result/app

      - name: 7-Zip dst-admin binaries
        run: |
          7z a -mx9 ${{ github.workspace }}/temp/dst-admin-${{ matrix.os }}-${{ matrix.arch }}.7z ${{ github.workspace }}/build/result/app

      - name: show zip files
        run: |
          ls -R ${{ github.workspace }}/temp

      - name: Upload dst-admin binaries
        uses: actions/upload-artifact@v4
        with:
          name: dst-admin-${{ matrix.os }}-${{ matrix.arch }}-${{ env.core_short_commit_id }}
          compression-level: 9
          path: |
            ${{ github.workspace }}/temp/*
          if-no-files-found: error

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get current date time
        run: |
          echo "current_date_time=$(TZ=Asia/Shanghai date +'%Y-%m-%d-%H-%M')" >> "$GITHUB_ENV"

      - name: Download dst-admin archives
        uses: actions/download-artifact@v5
        if: ${{ inputs.release_archives }}
        with:
          pattern: dst-admin-*
          merge-multiple: true
          path: ${{ github.workspace }}/archives

      - name: show zip files
        if: ${{ inputs.release_archives }}
        run: |
          ls -R ${{ github.workspace }}/archives

      - name: Release dst-admin archives
        uses: softprops/action-gh-release@v2
        if: ${{ inputs.release_archives }}
        with:
          tag_name: "V1-${{ env.current_date_time }}"
          name: "V1-${{ env.current_date_time }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          body: |
            dst server libs.
            dst-admin-go from [${{ needs.build.outputs.core_current_branch }}] [${{ needs.build.outputs.core_short_commit_id }}]
            dst-manage-web2 from [${{ needs.build.outputs.web_current_branch }}] [${{ needs.build.outputs.web_short_commit_id }}]
          files: |
            ${{ github.workspace }}/archives/**
